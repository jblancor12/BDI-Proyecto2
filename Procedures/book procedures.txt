USE `pe`;
DROP procedure IF EXISTS `insert_book`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `insert_book`(ptitle VARCHAR(45), pid_edition INT, pid_editorial INT, pid_calification INT)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	INSERT INTO book(title, id_edition, id_editorial, id_calification)
	VALUES(ptitle, pid_edition, pid_editorial, pid_calification);
END$$

DELIMITER ;



USE `pe`;
DROP procedure IF EXISTS `remove_book`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `remove_book`(pid_book INT)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	DELETE FROM book
	WHERE id_book = pid_book;
END$$

DELIMITER ;



USE `pe`;
DROP procedure IF EXISTS `update_book_title`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `update_book_title`(pid_book INT, ptitle VARCHAR(45))
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	UPDATE book
	SET title = ptitle
	WHERE id_book = pid_book;
END$$

DELIMITER ;


USE `pe`;
DROP procedure IF EXISTS `update_book_id_book_edition`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `update_book_id_book_edition`(pid_book INT, pid INT)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	UPDATE book
	SET id_edition = pid
	WHERE id_book = pid_book;
END$$

DELIMITER ;



USE `pe`;
DROP procedure IF EXISTS `update_book_id_editorial`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `update_book_id_editorial`(pid_book INT, pid INT)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	UPDATE book
	SET id_editorial = pid
	WHERE id_book = pid_book;
END$$

DELIMITER ;


USE `pe`;
DROP procedure IF EXISTS `update_book_id_calification`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `update_book_id_calification`(pid_book INT, pid INT)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	UPDATE book
	SET id_calification = pid
	WHERE id_book = pid_book;
END$$

DELIMITER ;


USE `pe`;
DROP procedure IF EXISTS `update_book_id_photo`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `update_book_id_photo`(pid_book INT, pid INT)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	UPDATE book
	SET id_photo = pid
	WHERE id_book = pid_book;
END$$

DELIMITER ;


USE `pe`;
DROP procedure IF EXISTS `show_books`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `show_books` ()
BEGIN
select a.id_book, a.title, e.description, d.description,b.name, c.score
from book a
join editorial e
on a.id_editorial = e.id_editorial
join bookedition d
on a.id_book_edition= d.id_edition
join bookxauthor j
on a.id_book = j.id_book
join author b
on j.id_author = b.id_author
join calification c
on a.id_calification = c.id_calification;
END$$

DELIMITER ;



