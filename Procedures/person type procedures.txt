USE `pe`;
DROP procedure IF EXISTS `insert_person_type`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `insert_person_type`(pdescription VARCHAR(45))
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	INSERT INTO person_type(description)
	VALUES(pdescription);
END$$

DELIMITER ;


USE `pe`;
DROP procedure IF EXISTS `remove_person_type`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `remove_person_type`(pid_person_type INT)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	DELETE FROM person_type
	WHERE id_person_type = pid_person_type;
END$$

DELIMITER ;


USE `pe`;
DROP procedure IF EXISTS `update_person_type_description`;

DELIMITER $$
USE `pe`$$
CREATE PROCEDURE `update_person_type_description` (pid_person_type INT, pdescription VARCHAR(45))
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
    SELECT 'An error has occurred';
END;
	UPDATE person_type
	SET description = pdescription
	WHERE id_person_type = pid_person_type;
END$$

DELIMITER ;

