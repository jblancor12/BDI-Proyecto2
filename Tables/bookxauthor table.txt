CREATE TABLE `pe`.`bookxauthor` (
  `id_book` INT NOT NULL,
  `id_author` INT NOT NULL,
  `creation_date` DATE NULL,
  `creation_user` VARCHAR(45) NULL,
  `date_last_mod` DATE NULL,
  `user_last_mod` VARCHAR(45) NULL,
  PRIMARY KEY (`id_book`, `id_author`),
  INDEX `id_author_bxa_idx` (`id_author` ASC) VISIBLE,
  CONSTRAINT `id_book_bxa`
    FOREIGN KEY (`id_book`)
    REFERENCES `pe`.`book` (`id_book`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_author_bxa`
    FOREIGN KEY (`id_author`)
    REFERENCES `pe`.`author` (`id_author`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
COMMENT = 'Table to store books and authors that are related';
DROP TRIGGER IF EXISTS `pe`.`bookxauthor_BEFORE_INSERT`;

DELIMITER $$
USE `pe`$$
CREATE DEFINER = CURRENT_USER TRIGGER `pe`.`bookxauthor_BEFORE_INSERT` BEFORE INSERT ON `bookxauthor` FOR EACH ROW
BEGIN
	IF NEW.creation_date IS NULL OR NEW.creation_user IS NULL THEN 
		SET NEW.creation_date = CURDATE();
		SET NEW.creation_user = SYSTEM_USER();
	END IF;
END$$
DELIMITER ;
DROP TRIGGER IF EXISTS `pe`.`bookxauthor_BEFORE_UPDATE`;

DELIMITER $$
USE `pe`$$
CREATE DEFINER = CURRENT_USER TRIGGER `pe`.`bookxauthor_BEFORE_UPDATE` BEFORE UPDATE ON `bookxauthor` FOR EACH ROW
BEGIN
	IF NEW.date_last_mod IS NULL OR NEW.user_last_mod IS NULL THEN
		SET NEW.date_last_mod = CURDATE();
		SET NEW.user_last_mod = SYSTEM_USER();
	END IF;
END$$
DELIMITER ;
