/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andres
 */
public class catalogos extends javax.swing.JDialog {

    /**
     * Creates new form catalogos
     */
    public catalogos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        CatalogsCB = new javax.swing.JComboBox<>();
        CatalogsActionCB = new javax.swing.JComboBox<>();
        CatalogSeeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CatalogIdTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CatalogDescriptionTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CatalogoExeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Catalogs");

        CatalogsCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Author", "Calification", "Editorial", "Genre", "Phone", "Relationship" }));

        CatalogsActionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insert", "Update", "Delete" }));

        CatalogSeeButton.setText("See");
        CatalogSeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatalogSeeButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("ID ");

        jLabel3.setText("Description");

        CatalogDescriptionTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatalogDescriptionTFActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        CatalogoExeButton.setText("Execute");
        CatalogoExeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatalogoExeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 96, Short.MAX_VALUE)
                        .addComponent(CatalogsCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(CatalogsActionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(129, 129, 129)
                        .addComponent(CatalogSeeButton)
                        .addGap(173, 173, 173))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(CatalogIdTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                .addComponent(CatalogDescriptionTF))
                            .addComponent(CatalogoExeButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CatalogsCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CatalogsActionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CatalogSeeButton))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(CatalogIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(CatalogDescriptionTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addComponent(CatalogoExeButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CatalogDescriptionTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatalogDescriptionTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CatalogDescriptionTFActionPerformed

    private void CatalogSeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatalogSeeButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo;
     
        
        
        
         try {
             if (CatalogsCB.getSelectedItem()=="Author"){
             modelo =connectMysql.conexion.showAuthors();
              jTable1.setModel(modelo);
             }
             else if (CatalogsCB.getSelectedItem().equals("Calification")){
                 System.out.println("Calification");
                 modelo = connectMysql.conexion.showCalification();
                 jTable1.setModel(modelo);
             }
             else if(CatalogsCB.getSelectedItem()=="Editorial"){
                 modelo = connectMysql.conexion.showEditorial();
                 jTable1.setModel(modelo);
             }
             else if(CatalogsCB.getSelectedItem()=="Genre"){
                 modelo = connectMysql.conexion.showgenre();
                 jTable1.setModel(modelo);
             }

             else if(CatalogsCB.getSelectedItem()=="Phone"){
                 modelo = connectMysql.conexion.showphone();
                 jTable1.setModel(modelo);
             }
             else if(CatalogsCB.getSelectedItem().equals("Relationship")){
                 System.out.println("Relationship");
                 modelo = connectMysql.conexion.showrelationship();
                 jTable1.setModel(modelo);
             }
             
         } catch (SQLException ex) {
             
         }
         
    }//GEN-LAST:event_CatalogSeeButtonActionPerformed

    private void CatalogoExeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatalogoExeButtonActionPerformed
        // TODO add your handling code here:
        System.out.println(CatalogsCB.getSelectedItem()); 
        System.out.println(CatalogsActionCB.getSelectedItem());
        
        if (CatalogsCB.getSelectedItem().equals("Author")){
                if(CatalogsActionCB.getSelectedItem().equals("Insert")){
                    try {
                        connectMysql.conexion.InsertAuthor(CatalogDescriptionTF.getText());
                        System.out.println(CatalogDescriptionTF.getText()); 

                    } catch (SQLException ex) {
                        Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else if (CatalogsActionCB.getSelectedItem().equals("Update")){
                    try {
                        connectMysql.conexion.UpdateAuthor(Integer.parseInt(CatalogIdTextField.getText()), CatalogDescriptionTF.getText());
                    } catch (SQLException ex) {
                        Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else if(CatalogsActionCB.getSelectedItem().equals("Delete")){
                    try {
                        connectMysql.conexion.DeleteAuthor(Integer.parseInt(CatalogIdTextField.getText()));
                    } catch (SQLException ex) {
                        Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
                
                
                
        } else if(CatalogsCB.getSelectedItem().equals("Calification")){
            if(CatalogsActionCB.getSelectedItem().equals("Insert")){
                try {
                    connectMysql.conexion.InsertCalification(Integer.parseInt(CatalogDescriptionTF.getText()));
                    System.out.println(CatalogDescriptionTF.getText()); 
                    
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if (CatalogsActionCB.getSelectedItem().equals("Update")){
                try {
                    connectMysql.conexion.UpdateCalification(Integer.parseInt(CatalogIdTextField.getText()), Integer.parseInt(CatalogDescriptionTF.getText()));
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(CatalogsActionCB.getSelectedItem().equals("Delete")){
                try {
                    connectMysql.conexion.RemoveCalification(Integer.parseInt(CatalogIdTextField.getText()));
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if(CatalogsCB.getSelectedItem().equals("Editorial")){
            if(CatalogsActionCB.getSelectedItem().equals("Insert")){
                try {
                    connectMysql.conexion.InsertEditorial(CatalogDescriptionTF.getText());
                    System.out.println(CatalogDescriptionTF.getText()); 
                    
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if (CatalogsActionCB.getSelectedItem().equals("Update")){
                try {
                    connectMysql.conexion.UpdateEditorial(Integer.parseInt(CatalogIdTextField.getText()), CatalogDescriptionTF.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(CatalogsActionCB.getSelectedItem().equals("Delete")){
                try {
                    connectMysql.conexion.RemoveEditorial(Integer.parseInt(CatalogIdTextField.getText()));
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if(CatalogsCB.getSelectedItem().equals("Genre")){
            if(CatalogsActionCB.getSelectedItem().equals("Insert")){
                try {
                    connectMysql.conexion.InsertGenre(CatalogDescriptionTF.getText());
                    System.out.println(CatalogDescriptionTF.getText()); 
                    
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if (CatalogsActionCB.getSelectedItem().equals("Update")){
                try {
                    connectMysql.conexion.UpdateGenre(Integer.parseInt(CatalogIdTextField.getText()), CatalogDescriptionTF.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(CatalogsActionCB.getSelectedItem().equals("Delete")){
                try {
                    connectMysql.conexion.RemoveGenre(Integer.parseInt(CatalogIdTextField.getText()));
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if(CatalogsCB.getSelectedItem().equals("Phone")){
            if(CatalogsActionCB.getSelectedItem().equals("Insert")){
                try {
                    connectMysql.conexion.InsertPhone(Integer.parseInt(CatalogDescriptionTF.getText()));
                    System.out.println(CatalogDescriptionTF.getText()); 
                    
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if (CatalogsActionCB.getSelectedItem().equals("Update")){
                try {
                    connectMysql.conexion.UpdatePhone(Integer.parseInt(CatalogIdTextField.getText()), Integer.parseInt(CatalogDescriptionTF.getText()));
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(CatalogsActionCB.getSelectedItem().equals("Delete")){
                try {
                    connectMysql.conexion.RemovePhone(Integer.parseInt(CatalogIdTextField.getText()));
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if(CatalogsCB.getSelectedItem().equals("Relationship")){
            if(CatalogsActionCB.getSelectedItem().equals("Insert")){
                try {
                    connectMysql.conexion.InsertRelationship(CatalogDescriptionTF.getText());
                    System.out.println(CatalogDescriptionTF.getText()); 
                    
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if (CatalogsActionCB.getSelectedItem().equals("Update")){
                try {
                    connectMysql.conexion.UpdateRelationship(Integer.parseInt(CatalogIdTextField.getText()), CatalogDescriptionTF.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(CatalogsActionCB.getSelectedItem().equals("Delete")){
                try {
                    connectMysql.conexion.RemoveRelationship(Integer.parseInt(CatalogIdTextField.getText()));
                } catch (SQLException ex) {
                    Logger.getLogger(catalogos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
          
        
        
    }//GEN-LAST:event_CatalogoExeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(catalogos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(catalogos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(catalogos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(catalogos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                catalogos dialog = new catalogos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CatalogDescriptionTF;
    private javax.swing.JTextField CatalogIdTextField;
    private javax.swing.JButton CatalogSeeButton;
    private javax.swing.JButton CatalogoExeButton;
    private javax.swing.JComboBox<String> CatalogsActionCB;
    private javax.swing.JComboBox<String> CatalogsCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
